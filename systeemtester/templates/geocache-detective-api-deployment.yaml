apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: {{ .Values.geocachedetectiveapi.name }}
  name: {{ .Values.geocachedetectiveapi.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: {{ .Values.geocachedetectiveapi.name }}
  strategy: {}
  revisionHistoryLimit: 0
  template:
    metadata:
      creationTimestamp: null
      labels:
        io.kompose.network/devhome-default: "true"
        io.kompose.service: {{ .Values.geocachedetectiveapi.name }}
    spec:
      containers:
        - env:
            - name: management.endpoints.web.exposure.include
              value: "*"
            - name: management.info.env.enabled
              value: "true"
            - name: spring.datasource.url
              value: jdbc:postgresql://postgresdb:5432/postgis
            - name: spring.datasource.password
              value: postgis
            - name: spring.jpa.database-platform
              value: org.hibernate.dialect.PostgreSQLDialect
            - name: spring.jpa.hibernate.database-platform
              value: org.hibernate.spatial.dialect.postgis.PostgisDialect
            - name: spring.ai.openai.api-key
              valueFrom:
                secretKeyRef:
                  name: openai-secret
                  key: apikey
            {{- if .Values.tls.enabled }}
            - name: SERVER_SSL_ENABLED
              value: "true"
            - name: SERVER_SSL_KEY_STORE
              value: "file:{{ .Values.tls.keystorePath }}"
            - name: SERVER_SSL_KEY_STORE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.tls.backendSecretName }}
                  key: {{ .Values.tls.backendSecretPasswordKey }}
            - name: SERVER_SSL_KEY_STORE_TYPE
              value: {{ .Values.tls.storeType }}
            - name: SERVER_SSL_KEY_ALIAS
              value: {{ .Values.tls.keyAlias }}
            {{- end }}
          image: {{ .Values.geocachedetectiveapi.image.fulldigest6 }}
          imagePullPolicy: Always
          name: {{ .Values.geocachedetectiveapi.name }}
          ports:
            - containerPort: {{ .Values.geocachedetectiveapi.service.internalPort }}
          resources: {}
          volumeMounts:
            {{- if .Values.tls.enabled }}
            - name: keystore-volume
              mountPath: /etc/ssl
              readOnly: true
            {{- end }}
{{/*          readinessProbe:*/}}
{{/*            httpGet:*/}}
{{/*              scheme: {{ if .Values.tls.enabled }}HTTPS{{ else }}HTTP{{ end }}*/}}
{{/*              path: /actuator/health*/}}
{{/*              port: {{ if .Values.tls.enabled }}8443{{ else }}http{{ end }}*/}}
{{/*            initialDelaySeconds: 10*/}}
{{/*            periodSeconds: 10*/}}
      restartPolicy: Always
      volumes:
        {{- if .Values.tls.enabled }}
        - name: keystore-volume
          secret:
            secretName: {{ .Values.tls.backendSecretName }}
        {{- end }}